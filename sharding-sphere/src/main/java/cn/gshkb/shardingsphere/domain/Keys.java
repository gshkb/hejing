/*
 * This file is generated by jOOQ.
 */
package cn.gshkb.shardingsphere.domain;


import cn.gshkb.shardingsphere.domain.tables.TOrder;
import cn.gshkb.shardingsphere.domain.tables.TOrderItem;
import cn.gshkb.shardingsphere.domain.tables.records.TOrderItemRecord;
import cn.gshkb.shardingsphere.domain.tables.records.TOrderRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>ds</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TOrderRecord, Long> IDENTITY_T_ORDER = Identities0.IDENTITY_T_ORDER;
    public static final Identity<TOrderItemRecord, Long> IDENTITY_T_ORDER_ITEM = Identities0.IDENTITY_T_ORDER_ITEM;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TOrderRecord> KEY_T_ORDER_PRIMARY = UniqueKeys0.KEY_T_ORDER_PRIMARY;
    public static final UniqueKey<TOrderItemRecord> KEY_T_ORDER_ITEM_PRIMARY = UniqueKeys0.KEY_T_ORDER_ITEM_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TOrderRecord, Long> IDENTITY_T_ORDER = Internal.createIdentity(TOrder.T_ORDER, TOrder.T_ORDER.ID);
        public static Identity<TOrderItemRecord, Long> IDENTITY_T_ORDER_ITEM = Internal.createIdentity(TOrderItem.T_ORDER_ITEM, TOrderItem.T_ORDER_ITEM.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<TOrderRecord> KEY_T_ORDER_PRIMARY = Internal.createUniqueKey(TOrder.T_ORDER, "KEY_t_order_PRIMARY", TOrder.T_ORDER.ID);
        public static final UniqueKey<TOrderItemRecord> KEY_T_ORDER_ITEM_PRIMARY = Internal.createUniqueKey(TOrderItem.T_ORDER_ITEM, "KEY_t_order_item_PRIMARY", TOrderItem.T_ORDER_ITEM.ID);
    }
}
