/*
 * This file is generated by jOOQ.
 */
package cn.gshkb.shardingsphere.domain.tables.records;


import cn.gshkb.shardingsphere.domain.tables.TOrder;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 订单
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderRecord extends UpdatableRecordImpl<TOrderRecord> implements Record7<Long, String, Long, Timestamp, Timestamp, String, Boolean> {

    private static final long serialVersionUID = -883096317;

    /**
     * Setter for <code>ds.t_order.id</code>. 主键
     */
    public TOrderRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ds.t_order.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ds.t_order.name</code>. 姓名
     */
    public TOrderRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ds.t_order.name</code>. 姓名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ds.t_order.user_id</code>. 用户id
     */
    public TOrderRecord setUserId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ds.t_order.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>ds.t_order.create_at</code>. 创建时间
     */
    public TOrderRecord setCreateAt(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ds.t_order.create_at</code>. 创建时间
     */
    public Timestamp getCreateAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>ds.t_order.update_at</code>. 更新时间
     */
    public TOrderRecord setUpdateAt(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ds.t_order.update_at</code>. 更新时间
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>ds.t_order.version</code>. 版本号
     */
    public TOrderRecord setVersion(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ds.t_order.version</code>. 版本号
     */
    public String getVersion() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ds.t_order.del_flag</code>. 删除标记
     */
    public TOrderRecord setDelFlag(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ds.t_order.del_flag</code>. 删除标记
     */
    public Boolean getDelFlag() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Long, Timestamp, Timestamp, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Long, Timestamp, Timestamp, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TOrder.T_ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TOrder.T_ORDER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return TOrder.T_ORDER.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return TOrder.T_ORDER.CREATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return TOrder.T_ORDER.UPDATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TOrder.T_ORDER.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return TOrder.T_ORDER.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord value4(Timestamp value) {
        setCreateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord value5(Timestamp value) {
        setUpdateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord value6(String value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord value7(Boolean value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRecord values(Long value1, String value2, Long value3, Timestamp value4, Timestamp value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TOrderRecord
     */
    public TOrderRecord() {
        super(TOrder.T_ORDER);
    }

    /**
     * Create a detached, initialised TOrderRecord
     */
    public TOrderRecord(Long id, String name, Long userId, Timestamp createAt, Timestamp updateAt, String version, Boolean delFlag) {
        super(TOrder.T_ORDER);

        set(0, id);
        set(1, name);
        set(2, userId);
        set(3, createAt);
        set(4, updateAt);
        set(5, version);
        set(6, delFlag);
    }
}
